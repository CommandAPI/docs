name: Build

on:
  push:
    branches:
      - master
      - 'ver/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2

      - name: Inject Base Url
        run: |
          BRANCH=$(echo ${GITHUB_REF} | sed -e 's/refs\/heads\///')
          if [[ $BRANCH == ver/* ]]; then
            VER=$(echo $BRANCH | sed 's|ver/||')         
            echo ${VER} > VER
          fi

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Verify Reference Codes
        # For dev builds, we want this enabled because dev builds aren't published yet
        # TODO: Make this not apply to dev builds
        continue-on-error: true
        run: |
          cd ./reference-code
          ./gradlew build

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Docs Dependencies
        run: yarn install

      - name: Build Docs
        run: 'yarn run docs:build'

      - name: Push to Build Branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          BRANCH=$(echo ${GITHUB_REF} | sed -e 's/refs\/heads\///')
          TARGET_BRANCH="build/${BRANCH}"
          
          if git ls-remote --heads origin ${TARGET_BRANCH} | grep ${TARGET_BRANCH}; then
            git push origin --delete ${TARGET_BRANCH}
          fi
          
          find . -mindepth 1 -maxdepth 1 ! -name 'docs' ! -name '.git' -exec rm -rf {} +
          find docs -mindepth 1 -maxdepth 1 ! -name '.vitepress' -exec rm -rf {} +
          cp -r docs/.vitepress/dist/* .
          rm -rf docs

          git checkout -b "${TARGET_BRANCH}"
          git add .
          git commit -m "GitHub Actions Auto Build ${BRANCH}"
          
          echo "Branch: ${BRANCH}"
          echo "Pushing to ${TARGET_BRANCH}"
          
          git push origin "${TARGET_BRANCH}"
